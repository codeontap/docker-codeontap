name: build

on:
  push:
    branches:
      - 'master'
  pull_request:
  workflow_dispatch:

  # Make a latest update build to keep things in shape
  schedule:
    - cron: 0 7 * * 0

jobs:

  build_images:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:

          # The docker_target is a stage within the multistage pipeline
          # The tag is what we push to dockerhub under the hamletio/hamlet image

          - docker_target: hamlet
            image_tag: ''
          - docker_target: jenkins-jnlp-agent
            image_tag: -jenkins
          - docker_target: azure-pipelines-agent
            image_tag: -azpipeline

          - docker_target: meteor-hamlet
            image_tag: -builder-meteor
          - docker_target: meteor-jenkins-jnlp-agent
            image_tag: -jenkins-builder-meteor
          - docker_target: meteor-azure-pipelines-agent
            image_tag: -azpipeline-builder-meteor

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: get_tag_name
        name: image tag prefix
        run: |
          if [[ "${{ github.event_name}}" == "schedule" ]]; then
            echo ::set-output name=TAG_PREFIX::latest
            echo ::set-output name=PUSH_IMAGE::true
            exit 0
          fi

          if [[ "${{ github.event_name}}" == "workflow_dispatch" ]]; then
            echo ::set-output name=TAG_PREFIX::latest
            echo ::set-output name=PUSH_IMAGE::true
            exit 0
          fi

          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo ::set-output name=TAG_PREFIX::latest
            echo ::set-output name=PUSH_IMAGE::true
            exit 0
          fi

          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo ::set-output name=TAG_PREFIX::${GITHUB_REF#refs/tags/}
            echo ::set-output name=PUSH_IMAGE::true
            exit 0
          fi

          echo ::set-output name=TAG_PREFIX::test
          echo ::set-output name=PUSH_IMAGE::false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ startsWith(steps.get_tag_name.outputs.PUSH_IMAGE, 'true') }}
          tags: hamletio/hamlet:${{ steps.get_tag_name.outputs.TAG_PREFIX }}${{ matrix.image_tag }}
          target: ${{ matrix.docker_target }}
